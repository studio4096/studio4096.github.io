{"version":3,"sources":["scripts/components/ArtworkPicture.vue","scripts/views/Artworks.vue"],"names":[],"mappings":"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","file":"Artworks.309934cb.js","sourceRoot":"..","sourcesContent":["\n\n\n\n\n\n\nimport Vue from 'vue'\n\nexport default Vue.extend({\n    props: {\n        filename: { type: String, default: null }\n        sizes: { type: Array, default: [] }\n        resizeOptions: { type: Object, default: () => { return {} } }\n    },\n    data() {\n        return {\n            sources: [],\n            src: null,\n        }\n    },\n    watch: {\n        filename() {\n            this.refresh();\n        },\n    },\n    methods: {\n        refresh() {\n        this.sources = this.sizes.filter(size => size.media).map(size => {\n            let sizeOption = {\n                secure: true,\n                width: size.px,\n                height: size.px,\n            };\n            return {\n                media: size.media,\n                srcset: this.$cloudinary.url(this.filename, Object.assign(sizeOption, this.resizeOptions)),\n            }\n        });\n        const px = this.sizes.find(size => !size.media).px;\n        this.src = this.$cloudinary.url(this.filename, Object.assign({ secure: true, width: px, height: px }, this.resizeOptions));\n        },\n    },\n    created() {\n        this.refresh();\n    }\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport Vue from 'vue'\nimport ArtworkPicture from '~/scripts/components/ArtworkPicture.vue'\n\nexport default Vue.extend({\n    data() {\n        return {\n            preview: false,\n            artworks: [],\n            currentIndex: 0,\n            current: '',\n            mainImg: null,\n        }\n    },\n    components: {\n        ArtworkPicture,\n    },\n    methods: {\n        showPreview(index) {\n            this.preview = true;\n            this.currentIndex = index;\n            this.current = this.artworks[index];\n        },\n        hidePreview() {\n            this.preview = false;\n        },\n        move(direction, ev) {\n            let nextIndex;\n            if (direction === 'left') {\n                nextIndex = this.currentIndex + 1;\n            } else if (direction === 'right') {\n                nextIndex = this.currentIndex - 1;\n            } else {\n                return;\n            }\n            if (nextIndex < 0 || nextIndex >= this.artworks.length ) {\n                return;\n            }\n            this.showPreview(nextIndex);\n        },\n    },\n    async created() {\n        let data = null;\n        try {\n            data = JSON.parse(sessionStorage.getItem('artworks'));\n        } catch(e) {\n            console.error(e)\n        }\n        if (!data) {\n            data = await this.$api.get(this.$cloudinary.url('artworks.json', {resource_type: 'raw'})).then(response => {\n                return response.data\n            });\n            sessionStorage.setItem('artworks', JSON.stringify(data));\n        }\n\n        this.mainImg = this.$cloudinary.url(data.main_visual.key)\n        this.artworks = data.list;\n    },\n})\n"]}